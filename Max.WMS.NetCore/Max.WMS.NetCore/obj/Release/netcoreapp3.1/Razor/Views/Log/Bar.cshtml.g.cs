#pragma checksum "D:\max\WMS\Max.WMS_Demo\Max.WMS.NetCore\Max.WMS.NetCore\Views\Log\Bar.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "080151985b3ba054a4c44df50d8f10b41b38285e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Log_Bar), @"mvc.1.0.view", @"/Views/Log/Bar.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\max\WMS\Max.WMS_Demo\Max.WMS.NetCore\Max.WMS.NetCore\Views\_ViewImports.cshtml"
using Max.WMS.NetCore;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\max\WMS\Max.WMS_Demo\Max.WMS.NetCore\Max.WMS.NetCore\Views\_ViewImports.cshtml"
using Max.WMS.NetCore.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\max\WMS\Max.WMS_Demo\Max.WMS.NetCore\Max.WMS.NetCore\Views\_ViewImports.cshtml"
using Max.Core.Entity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\max\WMS\Max.WMS_Demo\Max.WMS.NetCore\Max.WMS.NetCore\Views\_ViewImports.cshtml"
using Max.Core.Orm;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"080151985b3ba054a4c44df50d8f10b41b38285e", @"/Views/Log/Bar.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"578525f05628b61586d02cd96131d7535f052d97", @"/Views/_ViewImports.cshtml")]
    public class Views_Log_Bar : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<div class=""content-wrapper"">
    <section class=""content-header"">
        <h1>
            日志管理
            <small>登录统计</small>
        </h1>
        <ol class=""breadcrumb"">
            <li><a href=""#""><i class=""fa fa-dashboard""></i> 首页</a></li>
            <li><a href=""#"">日志管理</a></li>
            <li class=""active"">登录统计</li>
        </ol>
    </section>

    <section class=""content"">
        <div class=""row"">
            <div class=""col-xs-12"">
                <div class=""box"">
                    <div class=""box-body"">
                        <div class=""input-group"">
                            <span class=""input-group-addon"">日期范围</span>
                            <input type=""text"" v-model=""datemin"" ref=""datemin"" id=""datemin"" class=""form-control"" style=""width:120px;"">
                            <input type=""text"" v-model=""datemax"" ref=""datemax"" id=""datemax"" class=""form-control"" style=""width:120px;margin-left:10px;"">
                            <button v-on:click=""searchL"" type=""s");
            WriteLiteral("ubmit\" class=\"btn btn-success\" style=\"margin-left:10px;\"><i class=\"fa fa-search\"></i> 统计</button>\r\n                        </div>\r\n");
            WriteLiteral("                        <div id=\"container\" style=\"min-width:700px;height:400px\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</div>\r\n\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script type=""text/javascript"">
        var app = new Vue({
            el: '#app',
            data: {
                datemin: '',
                datemax: '',
                isActive: true,
                url: '/Log/Bar',
                legendData: [],
                xAxisData: [],
                seriesData: []
            },
            mounted: function () {
                var _self = this;
                _self.$nextTick(function () {
                    //显示active
                    _self.$refs.LogBar.parentNode.parentNode.classList.add(""active"");
                    _self.$refs.LogBar.classList.add(""active"");

                    _self.datemin = _self.getCurrentMonthFirst();
                    _self.datemax = _self.getCurrentMonthLast();
                    $('#datemin').datetimepicker({
                        format: 'yyyy-mm-dd',
                        minView: 2,
                        autoclose: true,
                        language: ""zh-CN""
            ");
                WriteLiteral(@"        });
                    $('#datemax').datetimepicker({
                        format: 'yyyy-mm-dd',
                        minView: 2,
                        autoclose: true,
                        language: ""zh-CN""
                    });
                    setTimeout(function () {
                        _self.loadL();
                    }, 500);
                });
            },
            methods: {
                loadL: function () {
                    var _self = this;
                    _self.xAxisData = [];
                    _self.seriesData = [];
                    var data = {
                        datemin: _self.$refs.datemin.value,
                        datemax: _self.$refs.datemax.value
                    };
                    yui.$axiospostform(_self.url, data).then(function (response) {
                        var res = response.data;
                        if (res.length > 0) {
                            for (var item in res) {
           ");
                WriteLiteral(@"                     _self.xAxisData.push(res[item].CreateDate);
                                _self.seriesData.push(res[item].COUNT);
                            }
                        }
                        var myChart = echarts.init(document.getElementById('container'));
                        var options = {
                            //title: {
                            //    text: '登录次数',
                            //    left: 50,
                            //    //x: 'center'
                            //},
                            tooltip: {
                                trigger: 'axis'
                            },
                            toolbox: {
                                feature: {
                                    dataView: { show: true, readOnly: false },
                                    magicType: { show: true, type: ['line', 'bar'] },
                                    restore: { show: true },
                                    saveAsIm");
                WriteLiteral(@"age: { show: true }
                                }
                            },
                            legend: {
                                data: ['登录Bar', '登录Line']
                            },
                            //X轴设置
                            xAxis: {
                                type: 'category',
                                data: _self.xAxisData
                            },
                            yAxis: {
                                type: 'value',
                                name: '次数',
                            },
                            series: [{
                                name:""登录Bar"",
                                data: _self.seriesData,
                                type: 'bar'
                            }, {
                                name: ""登录Line"",
                                data: _self.seriesData,
                                type: 'line'
                            }]
                        ");
                WriteLiteral(@"};
                        myChart.setOption(options);
                    }).catch(function (error) {
                        console.info(error);
                    });
                },
                searchL: function () {
                    this.loadL();
                },

            }
        });
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
