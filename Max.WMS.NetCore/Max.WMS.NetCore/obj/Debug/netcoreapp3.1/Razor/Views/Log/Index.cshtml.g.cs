#pragma checksum "D:\Project\Git\WMS\Max.WMS_Demo\Max.WMS.NetCore\Max.WMS.NetCore\Views\Log\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8862c65eff685d0524d74895e1679950a26032e9"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Log_Index), @"mvc.1.0.view", @"/Views/Log/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Project\Git\WMS\Max.WMS_Demo\Max.WMS.NetCore\Max.WMS.NetCore\Views\_ViewImports.cshtml"
using Max.WMS.NetCore;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Project\Git\WMS\Max.WMS_Demo\Max.WMS.NetCore\Max.WMS.NetCore\Views\_ViewImports.cshtml"
using Max.WMS.NetCore.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Project\Git\WMS\Max.WMS_Demo\Max.WMS.NetCore\Max.WMS.NetCore\Views\_ViewImports.cshtml"
using Max.Core.Entity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Project\Git\WMS\Max.WMS_Demo\Max.WMS.NetCore\Max.WMS.NetCore\Views\_ViewImports.cshtml"
using Max.Core.Orm;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8862c65eff685d0524d74895e1679950a26032e9", @"/Views/Log/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"578525f05628b61586d02cd96131d7535f052d97", @"/Views/_ViewImports.cshtml")]
    public class Views_Log_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<div class=""content-wrapper"">
    <section class=""content-header"">
        <h1>
            日志管理
            <small>系统日志</small>
        </h1>
        <ol class=""breadcrumb"">
            <li><a href=""#""><i class=""fa fa-dashboard""></i> 首页</a></li>
            <li><a href=""#"">日志管理</a></li>
            <li class=""active"">系统日志</li>
        </ol>
    </section>
");
            WriteLiteral(@"    <section class=""content"">
        <div class=""row"">
            <div class=""col-xs-12"">
                <div class=""box"">
                    <div class=""box-body"">
                        <div class=""input-group"">
                            <span class=""input-group-addon"">日期范围</span>
                            <input type=""text"" v-model=""datemin"" ref=""datemin"" id=""datemin"" class=""form-control"" style=""width:120px;"">
                            <input type=""text"" v-model=""datemax"" ref=""datemax"" id=""datemax"" class=""form-control"" style=""width:120px;margin-left:10px;"">
                            <button v-on:click=""searchL"" type=""submit"" class=""btn btn-success"" style=""margin-left:10px;""><i class=""fa fa-search""></i> 搜日志</button>
                        </div>
");
            WriteLiteral(@"                        <div id=""toolbar"" class=""btn-group"">
                            <button id=""btn_delete"" v-on:click=""deleteL"" type=""button"" class=""btn btn-default"">
                                <span class=""glyphicon glyphicon-remove"" aria-hidden=""true""></span>删除
                            </button>
                        </div>
");
            WriteLiteral("                        <table id=\"bootstraptable\" class=\"table table-bordered text-nowrap table-hover\"></table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n");
            WriteLiteral("        </div>\r\n    </section>\r\n</div>\r\n\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script type=""text/javascript"">
        var app = new Vue({
            el: '#app',
            data: {
                datemin: '',
                datemax: '',
                isActive: true,
                url: '/Log'
            },
            mounted: function () {
                var _self = this;
                _self.$nextTick(function () {
                    //显示active
                    _self.$refs.Log.parentNode.parentNode.classList.add(""active"");
                    _self.$refs.Log.classList.add(""active"");

                    _self.datemin = _self.getCurrentMonthFirst();
                    _self.datemax = _self.getCurrentMonthLast();
                    $('#datemin').datetimepicker({
                        format: 'yyyy-mm-dd',
                        minView: 2,
                        autoclose: true,
                        language: ""zh-CN""
                    });
                    $('#datemax').datetimepicker({
                        format: 'yyyy-mm-dd");
                WriteLiteral(@"',
                        minView: 2,
                        autoclose: true,
                        language: ""zh-CN""
                    });
                    setTimeout(function () {
                        _self.loadL();
                        //$(""input[class='form-control']"")[0].setAttribute(""placeholder"", ""日志类型"");
                        $(""div[class='pull-right search']"")[0].children[0].setAttribute(""placeholder"", ""日志类型"");
                    }, 500);
                });
            },
            methods: {
                loadL: function () {
                    _self = this;
                    var obj = [{
                        checkbox: true,             //是否显示复选框
                        visible: true
                    },
                    {
                        field: 'LogId',
                        title: 'Id',
                        visible: false
                    }, {
                        field: 'LogType',
                        title: '日志类型',");
                WriteLiteral(@"
                        align: 'center',
                        sortable: true
                    }, {
                        field: 'Description',
                        align: 'center',
                        title: '描述'
                    }, {
                        field: 'Url',
                        title: 'Url',
                        align: 'center',
                    }, {
                        field: 'Browser',
                        title: '浏览器',
                        align: 'center',
                        sortable: true
                    }, {
                        field: 'LogIp',
                        title: 'IP',
                        align: 'center',
                        sortable: true
                    }, {
                        field: 'CName',
                        title: '创建人',
                        align: 'center',
                        sortable: true
                    }, {
                        field: 'CreateDate',
      ");
                WriteLiteral(@"                  align: 'center',
                        title: '创建时间',
                        sortable: true,
                        formatter: function (value, row, index) {
                            return _self.jsonDateFormat(value);
                        }
                    }];
                    yui.table(""bootstraptable"", ""/Log/List"", obj, ""POST"", ""LogId"", false);
                },
                searchL: function () {
                    $(""#bootstraptable"").bootstrapTable('refresh');
                },
                deleteL: function () {
                    var _self = this;
                    var arr = $(""#bootstraptable"").bootstrapTable('getSelections');
                    if (arr.length > 0) {
                        var index = layer.confirm(""您确定要删除吗？"", { btn: [""确定"", ""取消""] }, function () {
                            //var id = arr[0].LogId;
                            //var ids = [];
                            var ids2 = [];
                            for ");
                WriteLiteral(@"(var item in arr) {
                                //ids.push({ Id: arr[item].LogId });
                                ids2.push(arr[item].LogId);
                            }
                            //var ids = []; ids.push({ Id: arr[item].LogId }); List<PubDelete> ids
                            //var ids2 = []; ids2.push(arr[item].LogId); List<string> ids
                            //$.ajax({
                            //    url: '/Log/Delete',
                            //    type: 'post',
                            //    contentType: 'application/json',
                            //    data: JSON.stringify(ids2),
                            //    success: function (data) {
                            //        alert(""不使用ViewModel:"" + data);
                            //    }
                            //});
                            yui.$axiospostjson('/Log/Delete', ids2).then(function (response) {
                                if (response.data.Item1) {
               ");
                WriteLiteral(@"                     layer.msg(response.data.Item2 || errorMsg, { icon: 1 });
                                    _self.searchL();
                                } else {
                                    layer.msg(response.data.Item2 || errorMsg, { icon: 5 });
                                }
                                layer.close(index);
                            }).catch(function (error) {
                                layer.msg(error.message, { icon: 5 });
                                layer.close(index);
                            });

                            //axios.post('/Log/Delete', ids2, {
                            //    headers: {
                            //        'Content-Type': 'application/json; charset=UTF-8'
                            //    }
                            //})
                            //    .then(function (response) {
                            //        if (response.data.Item1) {
                            //            layer.ms");
                WriteLiteral(@"g(response.data.Item2 || errorMsg, { icon: 1 });
                            //            _self.searchL();
                            //        } else {
                            //            layer.msg(response.data.Item2 || errorMsg, { icon: 5 });
                            //        }
                            //    })
                            //    .catch(function (error) {
                            //        layer.msg(error.message, { icon: 5 });
                            //    });
                            //layer.close(index);
                        });
                    } else {
                        layer.alert(""请选中行"", { icoon: 3, skin: ""layer-ext-moon"" });
                    }
                }
            }
        });
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
