#pragma checksum "D:\Project\Git\WMS\Max.WMS_Demo\Max.WMS.NetCore\Max.WMS.NetCore\Views\InventoryMove\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "667b51bd2bf4121a3d6a004a5b159a9e83056718"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_InventoryMove_Index), @"mvc.1.0.view", @"/Views/InventoryMove/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Project\Git\WMS\Max.WMS_Demo\Max.WMS.NetCore\Max.WMS.NetCore\Views\_ViewImports.cshtml"
using Max.WMS.NetCore;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Project\Git\WMS\Max.WMS_Demo\Max.WMS.NetCore\Max.WMS.NetCore\Views\_ViewImports.cshtml"
using Max.WMS.NetCore.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Project\Git\WMS\Max.WMS_Demo\Max.WMS.NetCore\Max.WMS.NetCore\Views\_ViewImports.cshtml"
using Max.Core.Entity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Project\Git\WMS\Max.WMS_Demo\Max.WMS.NetCore\Max.WMS.NetCore\Views\_ViewImports.cshtml"
using Max.Core.Orm;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"667b51bd2bf4121a3d6a004a5b159a9e83056718", @"/Views/InventoryMove/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"578525f05628b61586d02cd96131d7535f052d97", @"/Views/_ViewImports.cshtml")]
    public class Views_InventoryMove_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/lodop/LodopFuncs.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<div class=""content-wrapper"">
    <section class=""content-header"">
        <h1>
            仓库管理
            <small>库存移动</small>
        </h1>
        <ol class=""breadcrumb"">
            <li><a href=""#""><i class=""fa fa-dashboard""></i> 首页</a></li>
            <li><a href=""#"">仓库管理</a></li>
            <li class=""active"">库存移动</li>
        </ol>
    </section>
    <section class=""content"">
        <div class=""row"" style=""padding-bottom:1px;"">
            <div class=""col-md-12"">
                <div class=""box"">
                    <div class=""box-header with-border"">
                        <h3 class=""box-title"">搜索条件</h3>
                        <div class=""box-tools pull-right"">
                            <button type=""button"" id=""test"" class=""btn btn-box-tool"" data-widget=""collapse"" data-toggle=""tooltip"">
                                <i class=""fa fa-minus""></i>
                            </button>
                        </div>
                    </div>
                    <div cla");
            WriteLiteral(@"ss=""box-body"">
                        <div class=""input-group"">
                            <span class=""input-group-addon"">日期范围</span>
                            <input type=""text"" ref=""datemin"" id=""datemin"" class=""form-control"" style=""width:120px;"">
                            <input type=""text"" ref=""datemax"" id=""datemax"" class=""form-control"" style=""width:120px;margin-left:10px;"">
                            <select class=""form-control"" v-model=""Status"" style=""width:150px;margin-left:10px;"">
                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "667b51bd2bf4121a3d6a004a5b159a9e830567186008", async() => {
                WriteLiteral("全部状态");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
#nullable restore
#line 32 "D:\Project\Git\WMS\Max.WMS_Demo\Max.WMS.NetCore\Max.WMS.NetCore\Views\InventoryMove\Index.cshtml"
                                  
                                    if (ViewBag.Status != null || ViewBag.Status.Count > 0)
                                    {
                                        foreach (var item in ViewBag.Status)
                                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "667b51bd2bf4121a3d6a004a5b159a9e830567187707", async() => {
#nullable restore
#line 37 "D:\Project\Git\WMS\Max.WMS_Demo\Max.WMS.NetCore\Max.WMS.NetCore\Views\InventoryMove\Index.cshtml"
                                                                 Write(item.Value);

#line default
#line hidden
#nullable disable
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
#nullable restore
#line 37 "D:\Project\Git\WMS\Max.WMS_Demo\Max.WMS.NetCore\Max.WMS.NetCore\Views\InventoryMove\Index.cshtml"
                                               WriteLiteral(item.Key);

#line default
#line hidden
#nullable disable
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
#nullable restore
#line 38 "D:\Project\Git\WMS\Max.WMS_Demo\Max.WMS.NetCore\Max.WMS.NetCore\Views\InventoryMove\Index.cshtml"
                                        }
                                    }
                                

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                            </select>
                        </div>
                        <div class=""input-group"" style=""margin-top:5px;margin-left:-10px"">
                            <button name=""search"" v-on:click=""searchL"" type=""submit"" class=""btn btn-success"" style=""margin-left:10px;""><i class=""fa fa-search""></i> 搜移库</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class=""row"">
            <div class=""col-xs-12"">
                <div class=""box"">
                    <div class=""box-body"">
                        <div id=""toolbar"" class=""btn-group"">
                            <button id=""btn_add"" v-on:click=""showL"" type=""button"" class=""btn btn-default"">
                                <span class=""glyphicon glyphicon-plus"" aria-hidden=""true""></span>新增
                            </button>
                            <button id=""btn_edit"" v-on:click=""editL"" type=""button"" class=""btn btn-default"">
 ");
            WriteLiteral(@"                               <span class=""glyphicon glyphicon-pencil"" aria-hidden=""true""></span>修改
                            </button>
                            <button id=""btn_delete"" v-on:click=""deleteL"" type=""button"" class=""btn btn-default"">
                                <span class=""glyphicon glyphicon-remove"" aria-hidden=""true""></span>删除
                            </button>
                        </div>
                        <table id=""bootstraptable"" class=""table table-bordered text-nowrap table-hover""></table>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
");
            DefineSection("scripts", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "667b51bd2bf4121a3d6a004a5b159a9e8305671811781", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script type=""text/javascript"">
        var app = new Vue({
            el: '#app',
            data: {
                datemin: '',
                datemax: '',
                Status: '',
                moveList: [],
                moveDList: [],
            },
            mounted: function () {
                var _self = this;
                _self.$nextTick(function () {
                    //显示active
                    _self.$refs.InventoryMove.parentNode.parentNode.classList.add(""active"");
                    _self.$refs.InventoryMove.classList.add(""active"");
                    _self.$refs.datemin.value = _self.getCurrentMonthFirst();
                    _self.$refs.datemax.value = _self.getCurrentMonthLast();
                    //_self.datemin = _self.getCurrentMonthFirst();
                    //_self.datemax = _self.getCurrentMonthLast();
                    $('#datemin').datetimepicker({
                        format: 'yyyy-mm-dd',
                        minView: ");
                WriteLiteral(@"2,
                        autoclose: true,
                        language: ""zh-CN""
                    });
                    $('#datemax').datetimepicker({
                        format: 'yyyy-mm-dd',
                        minView: 2,
                        autoclose: true,
                        language: ""zh-CN""
                    });
                    setTimeout(function () {
                        _self.loadL();
                        yui.getDomById(""test"").click();
                        $(""div[class='pull-right search']"")[0].children[0].setAttribute(""placeholder"", ""移库单号"");
                    }, 500);
                });
            },
            methods: {
                loadL: function () {
                    _self = this;
                    var obj = [{
                        checkbox: true,             //是否显示复选框
                        visible: true
                    },
                    {
                        field: 'InventorymoveId',
          ");
                WriteLiteral(@"              title: 'Id',
                        visible: false
                    }, {
                        field: 'Status',
                        title: '操作',
                        align: 'center',
                        sortable: true,
                        formatter: function (value, row, index) {
                            var html = [];
                            var arr = [2, 5];
                            if (arr.indexOf(value) == -1) {
                                html.push('<button id=""addDetailL"" type=""button"" class=""btn btn-link"" style=""margin-top:-8px;"">添加明细</button>'
                                    , '<button id=""auditinL"" type=""button"" class=""btn btn-link"" style=""margin-top:-8px;margin-left:-10px;"">审核</button>',
                                    '<button id=""editDetailL"" type=""button"" class=""btn btn-link"" style=""margin-top:-8px;"">修改</button>'
                                );
                            }
                            html.push('<button i");
                WriteLiteral(@"d=""previewL"" type=""button"" class=""btn btn-link"" style=""margin-top:-8px;margin-left:-10px;"">预览</button>'
                                , '<button id=""printL"" type=""button"" class=""btn btn-link"" style=""margin-top:-8px;margin-left:-10px;"">打印</button>'
                            );
                            return html.join('');
                        },
                        events: {
                            'click #addDetailL': function (e, value, row, index) {
                                if (value === 1) {
                                    app.addDetailL(row.InventorymoveId);
                                } else {
                                    layer.msg(""初始转态才允许添加！"", { icon: 5 });
                                }
                            },
                            'click #auditinL': function (e, value, row, index) {
                                if (value === 1) {
                                    app.auditinL(row.InventorymoveId);
                          ");
                WriteLiteral(@"      } else {
                                    layer.msg(""初始转态才允许审核！"", { icon: 5 });
                                }
                            },
                            'click #editDetailL': function (e, value, row, index) {
                                var arr = [2, 5];
                                if (arr.indexOf(value) == -1) {
                                    app.editDetailL(row.InventorymoveId);
                                } else {
                                    layer.msg(""初始转态才允许修改！"", { icon: 5 });
                                }
                            },
                            'click #previewL': function (e, value, row, index) {
                                app.previewL(row.InventorymoveId);

                            },
                            'click #printL': function (e, value, row, index) {
                                app.printL(row.InventorymoveId);
                            }
                        },
                 ");
                WriteLiteral(@"   }, {
                        field: 'InventorymoveNo',
                        title: '移库单号',
                        align: 'center',
                        sortable: true
                    }, {
                        field: 'SourceStorageRackNo',
                        title: '原货架编号',
                        align: 'center',
                        sortable: true
                    }
                        , {
                        field: 'SourceStorageRackName',
                        title: '原货架名称',
                        align: 'center',
                        sortable: true
                    }, {
                        field: 'AimStorageRackNo',
                        title: '目标货架编号',
                        align: 'center',
                        sortable: true
                    }, {
                        field: 'AimStorageRackName',
                        title: '目标货架名称',
                        align: 'center',
                        sortable: true
");
                WriteLiteral(@"                    },
                    {
                        field: 'Status',
                        title: '状态',
                        align: 'center',
                        sortable: true,
                        formatter: function (value, row, index) {
                            switch (value) {
                                case 1:
                                    return '<span class=""label label-success radius"">初始</span>';
                                //return ""初始"";
                                case 2:
                                    return '<span class=""label label-success radius"">审核通过</span>';
                                //return ""审核通过"";
                                case 3:
                                    return '<span class=""label label-success radius"">审核未通过</span>';
                                case 5:
                                    return '<span class=""label label-success radius"">已发货</span>';
                                // ""审核未通过");
                WriteLiteral(@""";
                                default:
                                    return '<span class=""label label-success radius"">-</span>';
                            }
                        }
                    }, {
                        field: 'Remark',
                        align: 'center',
                        title: '备注'
                    }, {
                        field: 'CName',
                        title: '创建人',
                        align: 'center',
                        sortable: true
                    }, {
                        field: 'CreateDate',
                        align: 'center',
                        title: '创建时间',
                        sortable: true,
                        formatter: function (value, row, index) {
                            return _self.jsonDateFormat(value);
                        }
                    }, {
                        field: 'UName',
                        align: 'center',
                        t");
                WriteLiteral(@"itle: '修改人',
                        sortable: true
                    }, {
                        field: 'ModifiedDate',
                        title: '修改时间',
                        align: 'center',
                        sortable: true,
                        formatter: function (value, row, index) {
                            return _self.jsonDateFormat(value);
                        }
                    }];
                    var qParams = {
                        Status: _self.Status,
                    };
                    var objSub = [{
                        checkbox: true,             //是否显示复选框
                        visible: true
                    },
                    {
                        field: 'MoveDetailId',
                        title: 'Id',
                        visible: false
                    }, {
                        field: 'InventorymoveId',
                        title: 'pid',
                        visible: false,
            ");
                WriteLiteral(@"        }, {
                        field: 'Status',
                        title: '操作',
                        align: 'center',
                        sortable: true,
                        formatter: function (value, row, index) {
                            if (value != 2) {
                                return ['<button id=""deleteDetailL"" type=""button"" class=""btn btn-link"" style=""margin-top:-8px;"">删除</button>'

                                ].join('');
                            } else {
                                return '';
                            }
                        },
                        events: {
                            'click #deleteDetailL': function (e, value, row, index) {
                                if (value === 1) {
                                    app.deleteDetailL(row.MoveDetailId);
                                } else {
                                    layer.msg(""初始转态才允许添加！"", { icon: 5 });
                                }
   ");
                WriteLiteral(@"                         },

                        },
                    }, {
                        field: 'MaterialNo',
                        title: '物料编号',
                        align: 'center',
                        sortable: true
                    }, {
                        field: 'MaterialName',
                        title: '物料名称',
                        align: 'center',
                        sortable: true
                    },
                    {
                        field: 'ActQty',
                        title: '实际数量',
                        align: 'center',
                        sortable: true
                    },
                    {
                        field: 'Status',
                        title: '状态',
                        align: 'center',
                        sortable: true,
                        formatter: function (value, row, index) {
                            switch (value) {
                                case 1:
");
                WriteLiteral(@"                                    return '<span class=""label label-success radius"">待审核</span>';
                                case 2:
                                    return '<span class=""label label-success radius"">审核通过</span>';
                                case 3:
                                    return '<span class=""label label-success radius"">审核未通过</span>';
                                default:
                                    return '<span class=""label label-success radius"">-</span>';
                            }
                        }
                    }, {
                        field: 'AName',
                        title: '审核人',
                        align: 'center',
                        sortable: true
                    }, {
                        field: 'AuditinTime',
                        align: 'center',
                        title: '审核时间',
                        sortable: true,
                        formatter: function (value, row, inde");
                WriteLiteral(@"x) {
                            return _self.jsonDateFormat(value);
                        }
                    }, {
                        field: 'Remark',
                        align: 'center',
                        title: '备注'
                    }, {
                        field: 'CName',
                        title: '创建人',
                        align: 'center',
                        sortable: true
                    }, {
                        field: 'CreateDate',
                        align: 'center',
                        title: '创建时间',
                        sortable: true,
                        formatter: function (value, row, index) {
                            return _self.jsonDateFormat(value);
                        }
                    }, {
                        field: 'UName',
                        align: 'center',
                        title: '修改人',
                        sortable: true
                    }, {
                       ");
                WriteLiteral(@" field: 'ModifiedDate',
                        title: '修改时间',
                        align: 'center',
                        sortable: true,
                        formatter: function (value, row, index) {
                            return _self.jsonDateFormat(value);
                        }
                    }];

                    yui.table2(""bootstraptable"", ""/InventoryMove/List"", ""/InventoryMove/ListDetail"", obj, objSub, ""POST"", ""InventorymoveId"", ""InventorymoveId"", true, qParams);
                },
                showL: function () {
                    yui.layershow(""移库"", ""/InventoryMove/Add"", 600, 500);
                },
                addDetailL: function (val) {
                    yui.layershow(""移库明细"", ""/InventoryMove/Detail?pid="" + val, 600, 500);
                },
                htmlL: function (val, type) {
                    var index = layer.load(1, {
                        shade: [0.1, '#fff'] //0.1透明度的白色背景
                    });
                    var ");
                WriteLiteral(@"html = """";
                    yui.$axiosget('/InventoryMove/PreviewJson?id=' + val)
                        .then(function (response) {
                            _self.moveList = response.data.Item2;
                            _self.moveDList = response.data.Item4;
                            html = response.data.Item5;
                            if (_self.moveList.length > 0) {
                                var a = _self.moveList[0];
                                html = html.replace(""{InventorymoveNo}"", a.InventorymoveNo);
                                html = html.replace(""{SourceStoragerackNo}"", a.SourceStoragerackNo);
                                html = html.replace(""{SourceStoragerackName}"", a.SourceStoragerackName);
                                html = html.replace(""{AimStoragerackNo}"", a.AimStoragerackNo);
                                html = html.replace(""{AimStoragerackName}"", a.AimStoragerackName);
                            }
                            var detail = ");
                WriteLiteral(@""""";
                            if (_self.moveDList.length > 0) {
                                for (var item in _self.moveDList) {
                                    var a = _self.moveDList[0];
                                    detail += ""<tr>"";
                                    detail += ""<td>"" + a.MaterialNo + ""</td>"";
                                    detail += ""<td>"" + a.MaterialName + ""</td>"";
                                    detail += ""<td>"" + a.ActQty + ""</td>"";
                                    detail += ""<td>"" + a.Status + ""</td>"";
                                    detail += ""<td>"" + _self.formatNull(a.AName) + ""</td>"";
                                    detail += ""<td>"" + _self.formatL(a.AuditinTime) + ""</td>"";
                                    detail += ""</tr>"";
                                }
                            }
                            html = html.replace(""{Content}"", detail);
                            var LODOP = _self.LODOPL();
              ");
                WriteLiteral(@"              LODOP.PRINT_INIT(""移库单"")
                            LODOP.ADD_PRINT_HTM(0, 100, ""100%"", ""100%"", html);
                            if (type === 1) {
                                LODOP.PREVIEW();
                                //LODOP.PRINT_DESIGN();
                            } else {
                                LODOP.PRINT();
                            }
                        })
                        .catch(function (error) {
                            layer.msg(""请安装Lodop插件"", { icon: 5 });
                            //layer.msg(error.message, { icon: 5 });
                        });
                    layer.close(index);
                },
                previewL: function (val) {
                    var _self = this;
                    _self.htmlL(val, 1);
                },
                printL: function (val) {
                    var _self = this;
                    _self.htmlL(val, 2);
                },
                LODOPL: function () {
 ");
                WriteLiteral(@"                   var LODOP = getLodop();
                    return LODOP;
                },
                formatNull: function (val) {
                    if (typeof (val) == ""undefined"" || val == """" || val == null || val == "" "" || val == ""null"") {
                        return """";
                    }
                    return val;
                },
                formatL: function (val) {
                    return this.jsonDateFormat(val);
                },
                searchL: function () {
                    var qParams = {
                        Status: _self.Status,
                    };
                    var query = {
                        silent: true,
                        query: qParams
                    };
                    $(""#bootstraptable"").bootstrapTable('refresh', query);
                },
                editL: function () {
                    var arr = $(""#bootstraptable"").bootstrapTable('getSelections');
                    if (arr.le");
                WriteLiteral(@"ngth > 0) {
                        if (arr[0].Status == 2 || arr[0].Status == 5) {
                            layer.msg(""已审核，不允许修改"", { icon: 5 });
                            return false;
                        }
                        var index = layer.confirm(""您确定要修改吗？"", { btn: [""确定"", ""取消""] }, function () {
                            layer.close(index);
                            var id = arr[0].InventorymoveId;
                            yui.layershow(""修改移库"", ""/InventoryMove/Add?id="" + id, 600, 500);
                        }, function () {

                        });
                    } else {
                        layer.alert(""请选中行"", { icoon: 3, skin: ""layer-ext-moon"" });
                    }
                },
                editDetailL: function (val) {
                    if (val.length > 0) {
                        var index = layer.confirm(""您确定要修改明细吗？"", { btn: [""确定"", ""取消""] }, function () {
                            layer.close(index);
                           ");
                WriteLiteral(@" yui.layershow(""修改明细"", ""/InventoryMove/Detail?id="" + 1 + ""&pid="" + val, 600, 500);
                        }, function () {

                        });
                    } else {
                        layer.alert(""请选中行"", { icoon: 3, skin: ""layer-ext-moon"" });
                    }
                },
                auditinL: function (val) {
                    if (val.length > 0) {
                        var index = layer.confirm(""您确定要审核吗？"", { btn: [""确定"", ""取消""] }, function () {
                            yui.$axiosget('/InventoryMove/Auditin?id=' + val)
                                .then(function (response) {
                                    if (response.data.Item1) {
                                        layer.msg(response.data.Item2 || errorMsg, { icon: 1 });
                                        _self.searchL();
                                    } else {
                                        layer.msg(response.data.Item2 || errorMsg, { icon: 5 });
                   ");
                WriteLiteral(@"                 }
                                })
                                .catch(function (error) {
                                    layer.msg(error.message, { icon: 5 });
                                });
                            layer.close(index);
                        }, function () {

                        });
                    } else {
                        layer.alert(""请选中行"", { icoon: 3, skin: ""layer-ext-moon"" });
                    }
                },
                deleteDetailL: function (val) {
                    if (val.length > 0) {
                        var index = layer.confirm(""您确定要删除明细吗？"", { btn: [""确定"", ""取消""] }, function () {
                            yui.$axiosget('/InventoryMove/DeleteDetail?id=' + val)
                                .then(function (response) {
                                    if (response.data.Item1) {
                                        layer.msg(response.data.Item2 || errorMsg, { icon: 1 });
                ");
                WriteLiteral(@"                        _self.searchL();
                                    } else {
                                        layer.msg(response.data.Item2 || errorMsg, { icon: 5 });
                                    }
                                })
                                .catch(function (error) {
                                    layer.msg(error.message, { icon: 5 });
                                });
                            layer.close(index);
                        }, function () {

                        });
                    } else {
                        layer.alert(""请选中行"", { icoon: 3, skin: ""layer-ext-moon"" });
                    }
                },
                deleteL: function () {
                    var _self = this;
                    var arr = $(""#bootstraptable"").bootstrapTable('getSelections');
                    if (arr.length > 0) {
                        var index = layer.confirm(""您确定要删除吗？"", { btn: [""确定"", ""取消""] }, function () {
     ");
                WriteLiteral(@"                       var id = arr[0].InventorymoveId;
                            yui.$axiosget('/InventoryMove/Delete?id=' + id)
                                .then(function (response) {
                                    if (response.data.Item1) {
                                        layer.msg(response.data.Item2 || errorMsg, { icon: 1 });
                                        _self.searchL();
                                    } else {
                                        layer.msg(response.data.Item2 || errorMsg, { icon: 5 });
                                    }
                                })
                                .catch(function (error) {
                                    layer.msg(error.message, { icon: 5 });
                                });
                            layer.close(index);
                        });
                    } else {
                        layer.alert(""请选中行"", { icoon: 3, skin: ""layer-ext-moon"" });
                    }
   ");
                WriteLiteral("             },\r\n\r\n            }\r\n        });\r\n    </script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
